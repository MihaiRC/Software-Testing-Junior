{
	"info": {
		"_postman_id": "50a1a81e-a891-4b4c-95dd-881868a00306",
		"name": "Restful-Booker",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Ping",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"pm.test(\"Body matches Created\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Created\");\r",
							"});\r",
							"pm.test(\"Response time is less than 300ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(300);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Env}}/ping",
					"host": [
						"{{Env}}"
					],
					"path": [
						"ping"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create-Token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Body matches token\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"token\");\r",
							"});\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "default"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\" : \"admin\",\r\n    \"password\" : \"password123\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Env}}/auth",
					"host": [
						"{{Env}}"
					],
					"path": [
						"auth"
					],
					"query": [
						{
							"key": "Content-Type",
							"value": null,
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "CreateToken-WrongUserName",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Body matches token\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"token\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "default"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\" : \"WrongUserName\",\r\n    \"password\" : \"password123\"\r\n}"
				},
				"url": {
					"raw": "{{Env}}/auth",
					"host": [
						"{{Env}}"
					],
					"path": [
						"auth"
					],
					"query": [
						{
							"key": "Content-Type",
							"value": null,
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "CreateToken-Wrong-UsernamePassword",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Body matches token\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"token\");\r",
							"});\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "ec65037897153b3",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "default"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\" : \"WrongUserName\",\r\n    \"password\" : \"wrongPassWord\"\r\n}"
				},
				"url": {
					"raw": "{{Env}}/auth",
					"host": [
						"{{Env}}"
					],
					"path": [
						"auth"
					],
					"query": [
						{
							"key": "Content-Type",
							"value": null,
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create-Token-WrongPassword",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"pm.test(\"Body matches Token\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Token\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "ec65037897153b3",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "default"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\" : \"admin\",\r\n    \"password\" : \"WrongPassword\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Env}}/auth",
					"host": [
						"{{Env}}"
					],
					"path": [
						"auth"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create-Token-Blank-usernamePassword",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 500\", function () {\r",
							"    pm.response.to.have.status(500);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "default"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\" : \"\",\r\n    \"password\" : \"\"\r\n}"
				},
				"url": {
					"raw": "{{Env}}/auth",
					"host": [
						"{{Env}}"
					],
					"path": [
						"auth"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetBookingIds",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 300ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(300);\r",
							"});\r",
							"pm.test(\"Body matches bookingid\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"bookingid\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\" : \"admin\",\r\n    \"password\" : \"password123\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Env}}/booking",
					"host": [
						"{{Env}}"
					],
					"path": [
						"booking"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetBooking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 250ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(250);\r",
							"});\r",
							"pm.test(\"Body matches booking\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"booking\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "default"
					},
					{
						"key": "",
						"value": "",
						"type": "default",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Env}}/booking/5",
					"host": [
						"{{Env}}"
					],
					"path": [
						"booking",
						"5"
					],
					"query": [
						{
							"key": "id",
							"value": "2",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GetBooking-WrongID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"pm.test(\"Response time is less than 250ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(250);\r",
							"});\r",
							"pm.test(\"Body matches booking\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"booking\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "default"
					},
					{
						"key": "",
						"value": "",
						"type": "default",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Env}}/booking/WrongID",
					"host": [
						"{{Env}}"
					],
					"path": [
						"booking",
						"WrongID"
					],
					"query": [
						{
							"key": "id",
							"value": "2",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create-Booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Body matches bookingid\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"bookingid\");\r",
							"});\r",
							"pm.test(\"Body matches booking\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"booking\");\r",
							"});\r",
							"pm.test(\"Body matches firstname\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"firstname\");\r",
							"});\r",
							"pm.test(\"Body matches lastname\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"lastname\");\r",
							"});\r",
							"pm.test(\"Body matches totalprice\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"totalprice\");\r",
							"});\r",
							"pm.test(\"Body matches depositpaid\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"depositpaid\");\r",
							"});\r",
							"pm.test(\"Body matches bookingdates\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"bookingdates\");\r",
							"});\r",
							"pm.test(\"Body matches checkin\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"checkin\");\r",
							"});\r",
							"pm.test(\"Body matches checkout\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"checkout\");\r",
							"\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "3bef3d664cb2ab2",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "default"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "default",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\" : \"cata\",\r\n    \"lastname\" : \"Brown\",\r\n    \"totalprice\" : 111,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2018-01-01\",\r\n        \"checkout\" : \"2019-01-01\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}"
				},
				"url": {
					"raw": "{{Env}}/booking",
					"host": [
						"{{Env}}"
					],
					"path": [
						"booking"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create-Booking-Without-CheckinOrCheckOut",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Body matches bookingid\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"bookingid\");\r",
							"});\r",
							"\r",
							"pm.test(\"Body matches bookingid\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"bookingid\");\r",
							"});\r",
							"pm.test(\"Body matches booking\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"booking\");\r",
							"});\r",
							"pm.test(\"Body matches firstname\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"firstname\");\r",
							"});\r",
							"pm.test(\"Body matches lastname\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"lastname\");\r",
							"});\r",
							"pm.test(\"Body matches totalprice\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"totalprice\");\r",
							"});\r",
							"pm.test(\"Body matches depositpaid\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"depositpaid\");\r",
							"});\r",
							"pm.test(\"Body matches bookingdates\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"bookingdates\");\r",
							"});\r",
							"\r",
							"pm.test(\"Body matches additionalneeds\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"additionalneeds\");\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "password123",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "default"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "default",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\" : \"Jim\",\r\n    \"lastname\" : \"Brown\",\r\n    \"totalprice\" : 111,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"\",\r\n        \"checkout\" : \"\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}"
				},
				"url": {
					"raw": "{{Env}}/booking",
					"host": [
						"{{Env}}"
					],
					"path": [
						"booking"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create-Booking-Negative-Price",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 500\", function () {\r",
							"    pm.response.to.have.status(500);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "0f459db72c9cec7",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "default"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "default"
					},
					{
						"key": "Authorization",
						"value": "",
						"type": "default",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Env}}/booking",
					"host": [
						"{{Env}}"
					],
					"path": [
						"booking"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create-Booking-Without-First-Name",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 500\", function () {\r",
							"    pm.response.to.have.status(500);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "3bef3d664cb2ab2",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "default"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "default",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"lastname\" : \"Brown\",\r\n    \"totalprice\" : 111,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2018-01-01\",\r\n        \"checkout\" : \"2019-01-01\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}"
				},
				"url": {
					"raw": "{{Env}}/booking",
					"host": [
						"{{Env}}"
					],
					"path": [
						"booking"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update-Booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "0f459db72c9cec7",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "default"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "default",
						"disabled": true
					},
					{
						"key": "Cookie",
						"value": "",
						"type": "default"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{   \"FirstName\" :\r\n    \"lastname\" : \"Brown\",\r\n    \"totalprice\" : 111,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2018-01-01\",\r\n        \"checkout\" : \"2019-01-01\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}"
				},
				"url": {
					"raw": "{{Env}}/booking/77",
					"host": [
						"{{Env}}"
					],
					"path": [
						"booking",
						"77"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update-Booking-Without-FirstName",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "0f459db72c9cec7",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "default"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "default",
						"disabled": true
					},
					{
						"key": "Cookie",
						"value": "",
						"type": "default"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"lastname\" : \"Brown\",\r\n    \"totalprice\" : 111,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2018-01-01\",\r\n        \"checkout\" : \"2019-01-01\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}"
				},
				"url": {
					"raw": "{{Env}}/booking",
					"host": [
						"{{Env}}"
					],
					"path": [
						"booking"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update-Booking-WithNegativePrice",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "0f459db72c9cec7",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "default"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "default",
						"disabled": true
					},
					{
						"key": "Cookie",
						"value": "",
						"type": "default"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\" : \"Jim\",\r\n    \"lastname\" : \"Brown\",\r\n    \"totalprice\" : -111,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2018-01-01\",\r\n        \"checkout\" : \"2019-01-01\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}"
				},
				"url": {
					"raw": "{{Env}}/booking",
					"host": [
						"{{Env}}"
					],
					"path": [
						"booking"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update-Booking-Wrong-Id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 405\", function () {\r",
							"    pm.response.to.have.status(405);\r",
							"});\r",
							"pm.test(\"Body matches Created\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"method not allowed\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "0f459db72c9cec7",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "default"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "default",
						"disabled": true
					},
					{
						"key": "Cookie",
						"value": "",
						"type": "default"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\" : \"Jim\",\r\n    \"lastname\" : \"Brown\",\r\n    \"totalprice\" : -111,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2018-01-01\",\r\n        \"checkout\" : \"2019-01-01\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}"
				},
				"url": {
					"raw": "{{Env}}/booking/WrongID",
					"host": [
						"{{Env}}"
					],
					"path": [
						"booking",
						"WrongID"
					]
				}
			},
			"response": []
		},
		{
			"name": "Partial-Update",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "0f459db72c9cec7",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "default"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "default",
						"disabled": true
					},
					{
						"key": "Cookie",
						"value": "",
						"type": "default"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\" : \"Jim\",\r\n    \"lastname\" : \"Brown\",\r\n    \"totalprice\" : -111,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2018-01-01\",\r\n        \"checkout\" : \"2019-01-01\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}"
				},
				"url": {
					"raw": "{{Env}}/booking/66",
					"host": [
						"{{Env}}"
					],
					"path": [
						"booking",
						"66"
					]
				}
			},
			"response": []
		},
		{
			"name": "Partial-Update-With-Wrong-Id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "0f459db72c9cec7",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "default"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "default",
						"disabled": true
					},
					{
						"key": "Cookie",
						"value": "",
						"type": "default"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\" : \"Jim\",\r\n    \"lastname\" : \"Brown\",\r\n    \"totalprice\" : -111,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2018-01-01\",\r\n        \"checkout\" : \"2019-01-01\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}"
				},
				"url": {
					"raw": "{{Env}}/booking/66",
					"host": [
						"{{Env}}"
					],
					"path": [
						"booking",
						"66"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"pm.test(\"Body matches Created\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Created\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept-encoding": true
				}
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "password123",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "default"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "default"
					},
					{
						"key": "Cookie",
						"value": "",
						"type": "default",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Env}}/booking/78",
					"host": [
						"{{Env}}"
					],
					"path": [
						"booking",
						"78"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete-Wrong-Id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"pm.test(\"Body matches Created\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Created\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "0f459db72c9cec7",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "default",
						"disabled": true
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "default",
						"disabled": true
					},
					{
						"key": "Cookie",
						"value": "",
						"type": "default",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\" : \"Jim\",\r\n    \"lastname\" : \"Brown\",\r\n    \"totalprice\" : -111,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2018-01-01\",\r\n        \"checkout\" : \"2019-01-01\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}"
				},
				"url": {
					"raw": "{{Env}}https://postman-echo.com/get?var={{my_variable}}",
					"protocol": "{{Env}}https",
					"host": [
						"postman-echo",
						"com"
					],
					"path": [
						"get"
					],
					"query": [
						{
							"key": "var",
							"value": "{{my_variable}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "PROD",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.sendRequest(\"https://postman-echo.com/get\", function (err, response) {\r",
							"    console.log(response.json());\r",
							"});\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 900ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
							"});\r",
							"\r",
							"var schema = {\r",
							"    \"items\": {\r",
							"        \"type\": \"boolean\"\r",
							"    }\r",
							"};\r",
							"\r",
							"var data1 = [true, false];\r",
							"var data2 = [true, 123];\r",
							"\r",
							"pm.test('Schema is valid', function () {\r",
							"    pm.expect(tv4.validate(data1, schema)).to.be.true;\r",
							"    pm.expect(tv4.validate(data2, schema)).to.be.true;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{Base_Url}}/get?var={{my_variable}}",
					"host": [
						"{{Base_Url}}"
					],
					"path": [
						"get"
					],
					"query": [
						{
							"key": "var",
							"value": "{{my_variable}}"
						}
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "Env",
			"value": "https://restful-booker.herokuapp.com"
		}
	]
}